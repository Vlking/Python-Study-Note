#字典，如果信息太多就采用字典开发，如果信息不多就可以用列表开发
info ={#字典创建,字典是无需的。
    'stu1':"ZhangLan",#前面是key,后面是value
    'stu2':"LiHaiFeng",
    'stu3':"YangZhiDong",
}
print(info)#查看
for i in info:#循环字典,这种循环比下面的循环高效很多
    print(i,info[i])

for k,v in info.items():#循环字典，不建议使用，因为这个如果数据量大非常慢，而且它是把字典转成列表。
    print(k,v)


# print(info.get('stu1'))#如果不确定有没有数据用这种方法进行查看
# print('stu3' in info)#判断key值是否存在
# print(info["stu1"])#通过key值进行读取数据
# info["stu1"] ="张兰"#修改
# print(info)
# info["stu4"] ="PuWenXue"#添加
# print(info)
# del info["stu4"]#删除
# info.pop("stu3")#删除
# info.popitem()#随机删除
# print(info)



# b={
#     'stu1':"king",
#     1:3,
#     2:5
# }
# info.update(b)#把两个字典合并，有交叉的key进行更新，没有的进行添加
# print(info)



# c = dict.fromkeys([6,7,8],"aa")#初始化一个新的字典，用fromkeys的时候最好是1层，多层不建议使用。
# print(c)
# print(info.items())#把字典转换成列表
#字典里面套列表
student ={
    "搜索引擎":{
        'www.baidu.com':["百度","国内最大搜索引擎"],#前面是key,key不要使用中文后面是value
        'www.360.com':["360","国内最大专业搜索引擎"],
        'www.google.com':["谷歌","曾经搜索引擎的王者"]
    },
    "国外品牌电脑":{
            "戴尔":["美国第一公司","现在欠钱"]#前面是key,后面是value
    },
    "国内品牌电脑":{
            "联想":["国内知名品牌","国内外双赢"]
    }
}
student["国内品牌电脑"]["联想"][1] = "国内外双赢并且收购thinkpad产品"#修改
print(student)
print(student.values())#打印所有value值
print(student.keys())#打印所有key值
student.setdefault("国内品牌电脑",{"宏基":["台湾知名品牌","采用代工开发"]})#如果能取到key值就返回，如果取不到就添加的
print(student)
